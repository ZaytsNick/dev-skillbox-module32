// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Task_3.proto
// Protobuf C++ Version: 5.27.2

#include "Task_3.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr compani::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        legaladdress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        occupation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        yearoffoundation_{0},
        foreigneconomicactivities_{false} {}

template <typename>
PROTOBUF_CONSTEXPR compani::compani(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct companiDefaultTypeInternal {
  PROTOBUF_CONSTEXPR companiDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~companiDefaultTypeInternal() {}
  union {
    compani _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 companiDefaultTypeInternal _compani_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Task_5f3_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Task_5f3_2eproto = nullptr;
const ::uint32_t
    TableStruct_Task_5f3_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::compani, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::compani, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::compani, _impl_.yearoffoundation_),
        PROTOBUF_FIELD_OFFSET(::compani, _impl_.legaladdress_),
        PROTOBUF_FIELD_OFFSET(::compani, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::compani, _impl_.occupation_),
        PROTOBUF_FIELD_OFFSET(::compani, _impl_.foreigneconomicactivities_),
        3,
        0,
        1,
        2,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::compani)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_compani_default_instance_._instance,
};
const char descriptor_table_protodef_Task_5f3_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014Task_3.proto\"\177\n\007compani\022\030\n\020yearOfFound"
    "ation\030\001 \002(\005\022\024\n\014legalAddress\030\002 \002(\t\022\r\n\005tit"
    "le\030\003 \002(\t\022\022\n\noccupation\030\004 \001(\t\022!\n\031foreignE"
    "conomicActivities\030\005 \001(\010"
};
static ::absl::once_flag descriptor_table_Task_5f3_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Task_5f3_2eproto = {
    false,
    false,
    143,
    descriptor_table_protodef_Task_5f3_2eproto,
    "Task_3.proto",
    &descriptor_table_Task_5f3_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_Task_5f3_2eproto::offsets,
    file_level_enum_descriptors_Task_5f3_2eproto,
    file_level_service_descriptors_Task_5f3_2eproto,
};
// ===================================================================

class compani::_Internal {
 public:
  using HasBits =
      decltype(std::declval<compani>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(compani, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

compani::compani(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:compani)
}
inline PROTOBUF_NDEBUG_INLINE compani::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::compani& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        legaladdress_(arena, from.legaladdress_),
        title_(arena, from.title_),
        occupation_(arena, from.occupation_) {}

compani::compani(
    ::google::protobuf::Arena* arena,
    const compani& from)
    : ::google::protobuf::Message(arena) {
  compani* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yearoffoundation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, yearoffoundation_),
           offsetof(Impl_, foreigneconomicactivities_) -
               offsetof(Impl_, yearoffoundation_) +
               sizeof(Impl_::foreigneconomicactivities_));

  // @@protoc_insertion_point(copy_constructor:compani)
}
inline PROTOBUF_NDEBUG_INLINE compani::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        legaladdress_(arena),
        title_(arena),
        occupation_(arena) {}

inline void compani::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yearoffoundation_),
           0,
           offsetof(Impl_, foreigneconomicactivities_) -
               offsetof(Impl_, yearoffoundation_) +
               sizeof(Impl_::foreigneconomicactivities_));
}
compani::~compani() {
  // @@protoc_insertion_point(destructor:compani)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void compani::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.legaladdress_.Destroy();
  _impl_.title_.Destroy();
  _impl_.occupation_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
compani::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              compani::IsInitializedImpl,
              PROTOBUF_FIELD_OFFSET(compani, _impl_._cached_size_),
              false,
          },
          &compani::MergeImpl,
          &compani::kDescriptorMethods,
          &descriptor_table_Task_5f3_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 43, 2> compani::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(compani, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_compani_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::compani>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 yearOfFoundation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(compani, _impl_.yearoffoundation_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(compani, _impl_.yearoffoundation_)}},
    // required string legalAddress = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(compani, _impl_.legaladdress_)}},
    // required string title = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(compani, _impl_.title_)}},
    // optional string occupation = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(compani, _impl_.occupation_)}},
    // optional bool foreignEconomicActivities = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(compani, _impl_.foreigneconomicactivities_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(compani, _impl_.foreigneconomicactivities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 yearOfFoundation = 1;
    {PROTOBUF_FIELD_OFFSET(compani, _impl_.yearoffoundation_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string legalAddress = 2;
    {PROTOBUF_FIELD_OFFSET(compani, _impl_.legaladdress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 3;
    {PROTOBUF_FIELD_OFFSET(compani, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string occupation = 4;
    {PROTOBUF_FIELD_OFFSET(compani, _impl_.occupation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool foreignEconomicActivities = 5;
    {PROTOBUF_FIELD_OFFSET(compani, _impl_.foreigneconomicactivities_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\7\0\14\5\12\0\0\0"
    "compani"
    "legalAddress"
    "title"
    "occupation"
  }},
};

PROTOBUF_NOINLINE void compani::Clear() {
// @@protoc_insertion_point(message_clear_start:compani)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.legaladdress_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.occupation_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.yearoffoundation_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.foreigneconomicactivities_) -
        reinterpret_cast<char*>(&_impl_.yearoffoundation_)) + sizeof(_impl_.foreigneconomicactivities_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* compani::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:compani)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 yearOfFoundation = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_yearoffoundation(), target);
  }

  // required string legalAddress = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_legaladdress();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "compani.legalAddress");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string title = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "compani.title");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string occupation = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_occupation();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "compani.occupation");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional bool foreignEconomicActivities = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_foreigneconomicactivities(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:compani)
  return target;
}

::size_t compani::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:compani)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string legalAddress = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_legaladdress());
    }

    // required string title = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  // optional string occupation = 4;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_occupation());
  }

  // required int32 yearOfFoundation = 1;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_yearoffoundation());
  }

  // optional bool foreignEconomicActivities = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void compani::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<compani*>(&to_msg);
  auto& from = static_cast<const compani&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:compani)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_legaladdress(from._internal_legaladdress());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_occupation(from._internal_occupation());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.yearoffoundation_ = from._impl_.yearoffoundation_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.foreigneconomicactivities_ = from._impl_.foreigneconomicactivities_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void compani::CopyFrom(const compani& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:compani)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool compani::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const compani&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void compani::InternalSwap(compani* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legaladdress_, &other->_impl_.legaladdress_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.occupation_, &other->_impl_.occupation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(compani, _impl_.foreigneconomicactivities_)
      + sizeof(compani::_impl_.foreigneconomicactivities_)
      - PROTOBUF_FIELD_OFFSET(compani, _impl_.yearoffoundation_)>(
          reinterpret_cast<char*>(&_impl_.yearoffoundation_),
          reinterpret_cast<char*>(&other->_impl_.yearoffoundation_));
}

::google::protobuf::Metadata compani::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Task_5f3_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
